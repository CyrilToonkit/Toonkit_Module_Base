# Copyright (c) 2012-2013 Guillaume Barlier
# This file is a data file for the anim_picker tool.
# The "anim_picker" tool is covered by the LGPLv3 or later,
# read COPYING and COPYING.LESSER for details.
# The tool can be downloaded from: http://guillaume.barlier.com/code

<data_start/>
{'tabs': [{'data': {'items': [{'color': (255, 255, 255, 20), 'position': [0.0, 0.0], 'handles': [[-122.0, 470.0], [122.0, 470.0], [122.0, -380.0], [-122.0, -380.0]]}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\nimport pymel.core as pc\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\npc.setAttr(__NAMESPACE__ + "Global_SRT.Control_Level", 0)', 'color': (255, 255, 255, 125), 'text': u'0', 'text_color': (0, 0, 0, 255), 'handles': [[0.0, 0.0], [20.0, 1.2246467991473533e-15]], 'action_mode': True, 'position': [-47.64, 390.0], 'text_size': 22.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\nimport pymel.core as pc\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\npc.setAttr(__NAMESPACE__ + "Global_SRT.Control_Level", 1)', 'color': (255, 255, 255, 125), 'text': u'1', 'text_color': (0, 0, 0, 255), 'handles': [[0.0, 0.0], [20.0, 1.2246467991473533e-15]], 'action_mode': True, 'position': [-4.08, 390.0], 'text_size': 22.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\nimport pymel.core as pc\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\npc.setAttr(__NAMESPACE__ + "Global_SRT.Control_Level", 2)', 'color': (255, 255, 255, 125), 'text': u'2', 'text_color': (0, 0, 0, 255), 'handles': [[0.0, 0.0], [20.0, 1.2246467991473533e-15]], 'action_mode': True, 'position': [40.83, 390.0], 'text_size': 22.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\nimport pymel.core as pc\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\npc.setAttr(__NAMESPACE__ + "Global_SRT.Control_Level", 3)', 'color': (255, 255, 255, 125), 'text': u'3', 'text_color': (0, 0, 0, 255), 'handles': [[0.0, 0.0], [20.0, 1.2246467991473533e-15]], 'action_mode': True, 'position': [85.0, 390.0], 'text_size': 22.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\nimport pymel.core as pc\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\npc.setAttr(__NAMESPACE__ + "Global_SRT.Controls", 0 if pc.getAttr(__NAMESPACE__ + "Global_SRT.Controls") else 1)', 'color': (255, 255, 255, 125), 'text': u'Hide', 'text_color': (0, 0, 0, 255), 'handles': [[17.111984104714452, 14.142135623730951], [17.111984104714452, -14.14213562373095], [-17.111984104714452, -14.142135623730955], [-17.11198410471446, 14.142135623730947]], 'action_mode': True, 'position': [-91.19712230215828, 389.28920863309355], 'text_size': 12.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.keySet(str(__NAMESPACE__[0:-1]), inSet="All")', 'color': (255, 251, 205, 125), 'text': u'Key All', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, 119.93], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.keySet(str(__NAMESPACE__[0:-1]), inSet="Body_Main")', 'color': (255, 251, 205, 125), 'text': u'Key Body', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, 85.45], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.keySet(str(__NAMESPACE__[0:-1]), inSet="Facial_Main")', 'color': (255, 251, 205, 125), 'text': u'Key Facial', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, 50.42], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.selectSet(str(__NAMESPACE__[0:-1]), inSet="All")', 'color': (205, 222, 255, 125), 'text': u'Select All', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, 308.98], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.selectSet(str(__NAMESPACE__[0:-1]), inSet="Body_Main")', 'color': (205, 222, 255, 125), 'text': u'Select Body', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, 274.88057168569924], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.selectSet(str(__NAMESPACE__[0:-1]), inSet="Facial_Main")', 'color': (205, 222, 255, 125), 'text': u'Select Facial', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, 240.85], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\nimport maya.cmds as cmds\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ndef GetModifiers():\n    mods = cmds.getModifiers()\n    if mods & 1 or mods & 4:\n        return 1\n    \n    return 0\n\ntkRig.symSel(GetModifiers())', 'color': (205, 222, 255, 125), 'text': u'Sym Selection', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, 196.64], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.removeKey(str(__NAMESPACE__[0:-1]))', 'color': (255, 205, 205, 125), 'text': u'Remove Key', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, 7.25], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.removeAnim(str(__NAMESPACE__[0:-1]))', 'color': (255, 205, 205, 125), 'text': u'Remove Anim', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, -26.78], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.resetAll(str(__NAMESPACE__[0:-1]))', 'color': (255, 255, 255, 125), 'text': u'Reset All', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, -107.0], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.resetSel()', 'color': (255, 255, 255, 125), 'text': u'Reset Sel', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, -143.43], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.mirrorPose(str(__NAMESPACE__[0:-1]))', 'color': (255, 255, 255, 125), 'text': u'Mirror', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, -227.5], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.smooth(str(__NAMESPACE__[0:-1]), 0)', 'color': (255, 255, 255, 125), 'text': u'UnSmooth', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, -310.52], 'text_size': 18.0}, {'action_script': u'# Custom anim_picker python script window\n# Use the following faviable in your code to access related data:\n# __CONTROLS__ for picker item associated controls (will return sets and not content).\n# __FLATCONTROLS__ for associated controls and control set content.\n# __NAMESPACE__ for current picker namespace\n\n#import pymel.core as pc\nimport tkRig\n\nif __NAMESPACE__ == None:\n    __NAMESPACE__ = ""\nelse:\n\t__NAMESPACE__ += ":"\n\ntkRig.smooth(str(__NAMESPACE__[0:-1]), 2)', 'color': (255, 255, 255, 125), 'text': u'Smooth', 'text_color': (0, 0, 0, 255), 'handles': [[101.82337649086284, 14.142135623730951], [101.82337649086286, -14.14213562373095], [-101.82337649086284, -14.142135623730955], [-101.82337649086287, 14.142135623730947]], 'action_mode': True, 'position': [0.0, -346.89], 'text_size': 18.0}, {'color': (45, 45, 45, 255), 'text': u'CONTROLS', 'text_color': (255, 255, 255, 255), 'handles': [[112.00571413994913, 14.142135623730951], [112.00571413994915, -14.14213562373095], [-112.00571413994913, -14.142135623730955], [-112.00571413994916, 14.142135623730947]], 'position': [0.0, 439.65], 'text_size': 18.0}, {'color': (45, 45, 45, 255), 'text': u'SELECTION', 'text_color': (255, 255, 255, 255), 'handles': [[112.00571413994913, 14.142135623730951], [112.00571413994915, -14.14213562373095], [-112.00571413994913, -14.142135623730955], [-112.00571413994916, 14.142135623730947]], 'position': [0.0, 341.65], 'text_size': 18.0}, {'color': (45, 45, 45, 255), 'text': u'KEYING', 'text_color': (255, 255, 255, 255), 'handles': [[112.00571413994913, 14.142135623730951], [112.00571413994915, -14.14213562373095], [-112.00571413994913, -14.142135623730955], [-112.00571413994916, 14.142135623730947]], 'position': [0.0, 153.57179776453967], 'text_size': 18.0}, {'color': (45, 45, 45, 255), 'text': u'RESET', 'text_color': (255, 255, 255, 255), 'handles': [[112.00571413994913, 14.142135623730951], [112.00571413994915, -14.14213562373095], [-112.00571413994913, -14.142135623730955], [-112.00571413994916, 14.142135623730947]], 'position': [0.0, -70.88], 'text_size': 18.0}, {'color': (45, 45, 45, 255), 'text': u'MIRROR', 'text_color': (255, 255, 255, 255), 'handles': [[112.00571413994913, 14.142135623730951], [112.00571413994915, -14.14213562373095], [-112.00571413994913, -14.142135623730955], [-112.00571413994916, 14.142135623730947]], 'position': [0.0, -190.7], 'text_size': 18.0}, {'color': (45, 45, 45, 255), 'text': u'SMOOTH', 'text_color': (255, 255, 255, 255), 'handles': [[112.00571413994913, 14.142135623730951], [112.00571413994915, -14.14213562373095], [-112.00571413994913, -14.142135623730955], [-112.00571413994916, 14.142135623730947]], 'position': [0.0, -273.39], 'text_size': 18.0}]}, 'name': u'default'}]}
<data_end/>
